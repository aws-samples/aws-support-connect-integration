---
# Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.

# Permission is hereby granted, free of charge, to any person obtaining a copy of this
# software and associated documentation files (the "Software"), to deal in the Software
# without restriction, including without limitation the rights to use, copy, modify,
# merge, publish, distribute, sublicense, and/or sell copies of the Software, and to
# permit persons to whom the Software is furnished to do so.

# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
# INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
# PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
# HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
# OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
# SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

AWSTemplateFormatVersion: "2010-09-09"
Description: A CloudFormation template that deploys a connect based solution to make phone calls when new high priority AWS Support Cases are created
Parameters:
  PhoneNumberToNotify:
    Type: String
    Description: "Phone number that receives the Incident notification call. Phone number should be in E.164 format - +(Country Code)(Phone Number). Example: +61464646464"
    AllowedPattern: ^\+?[1-9]\d{1,14}$
  ConnectOutboundInstanceID:
    Type: String
    Description: "Amazon Connect Instance ID provisioned for facilitating the Outbound Incident calls. https://aws.amazon.com/premiumsupport/knowledge-center/find-connect-instance-id/"
  ConnectOutboundSourcePhone:
    Type: String
    Description: "Amazon Connect Instance Outbound Phone number to initiate the Outbound Incident calls. Phone number should be in E.164 format"
    AllowedPattern: ^\+?[1-9]\d{1,14}$
  ConnectOutboundContactFlowID:
    Type: String
    Description: "Contact Flow ID of the Amazon Connect Instance. https://docs.aws.amazon.com/connect/latest/adminguide/find-contact-flow-id.html"
  ConnectRegion:
    Type: String
    Description: "Region where Connect instance is deployed"
    AllowedValues: 
      - "ap-northeast-1"
      - "ap-northeast-2"
      - "ap-southeast-1"
      - "ap-southeast-2"
      - "ca-central-1"
      - "eu-central-1"
      - "eu-west-2"
      - "us-east-1"
      - "us-gov-west-1"
      - "us-west-2"

Resources:
  PublishEventSNSTopic:
    Type: AWS::SNS::Topic
  PublishEventSNSTopicPolicy:
    Type: AWS::SNS::TopicPolicy
    Properties:
      PolicyDocument:
        Statement:
          - Action: sns:Publish
            Effect: Allow
            Principal:
              Service: events.amazonaws.com
            Resource: !Ref PublishEventSNSTopic
        Version: "2012-10-17"
      Topics:
        - !Ref PublishEventSNSTopic
  EventBridgeRuleForAWSSupport:
    Type: AWS::Events::Rule
    Properties:
      EventPattern:
        source:
          - aws.support
        detail-type:
          - Support Case Update
        detail:
          event-name:
            - CreateCase
      State: ENABLED
      Targets: 
        - 
          Arn: 
            Ref: PublishEventSNSTopic
          Id: "Target0"
  MakeOutboundConnectCall:
    Type: AWS::Lambda::Function
    Properties:
      Runtime: python3.8
      Role: !GetAtt MakeOutboundConnectCallIAMRole.Arn
      Handler: index.handler
      Environment:
        Variables:
          PHONE_NUMBER_TO_NOTIFY : !Ref PhoneNumberToNotify
          CONNECT_OUTBOUND_INSTANCE_ID : !Ref ConnectOutboundInstanceID
          CONNECT_OUTBOUND_SOURCE_PHONE : !Ref ConnectOutboundSourcePhone
          CONNECT_OUTBOUND_CONTACT_FLOW_ID : !Ref ConnectOutboundContactFlowID
          CONNECT_REGION: !Ref ConnectRegion                  
      Code:
        ZipFile: |
          # Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
          # SPDX-License-Identifier: MIT-0
          import os
          import json
          import boto3


          # Read the environment variables
          PHONE_NUMBERS_TO_NOTIFY = os.environ.get("PHONE_NUMBER_TO_NOTIFY")
          CONNECT_OUTBOUND_INSTANCE_ID = os.environ.get("CONNECT_OUTBOUND_INSTANCE_ID")
          CONNECT_OUTBOUND_SOURCE_PHONE = os.environ.get("CONNECT_OUTBOUND_SOURCE_PHONE")
          CONNECT_OUTBOUND_CONTACT_FLOW_ID = os.environ.get("CONNECT_OUTBOUND_CONTACT_FLOW_ID")
          CONNECT_REGION = os.environ.get("CONNECT_REGION")

          awssupport_client = boto3.client("support")
          connect_client = boto3.client("connect", region_name=CONNECT_REGION)

          def process_and_notify_support_activity(activity):
              "Function processes the messages from EventBridge and invokes Amazon Connect notifications"
              activity = json.loads(activity["Sns"]["Message"])
              case_display_id = activity["detail"]["display-id"]
              case_id = activity["detail"]["case-id"]

              print("Case Display ID:" + case_display_id)

              retrieve_case = awssupport_client.describe_cases(
                  caseIdList=[case_id]
              )

              case_severity = retrieve_case['cases'][0]['severityCode']

              print("Case severity:" + case_severity)

              if case_severity == "urgent" or case_severity == "critical":
                  # Retrieve the case subject to update the outbound connect message
                  case_subject = retrieve_case['cases'][0]['subject']

                  # Make the outbound call with the Incident subject
                  connect_client.start_outbound_voice_contact(
                          DestinationPhoneNumber=PHONE_NUMBERS_TO_NOTIFY,
                          ContactFlowId=CONNECT_OUTBOUND_CONTACT_FLOW_ID,
                          InstanceId=CONNECT_OUTBOUND_INSTANCE_ID,
                          SourcePhoneNumber=CONNECT_OUTBOUND_SOURCE_PHONE,
                          Attributes={'SUPPORT_INCIDENT_DETAILS':case_subject}
                          )
                  print("Outbound call initiated to: " + PHONE_NUMBERS_TO_NOTIFY)
                          
          def handler(event, context):
              print(event)
              if "Records" not in event:
                  return
              for activity in event["Records"]:
                  process_and_notify_support_activity(activity)

  MakeOutboundConnectCallIAMRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - !Sub "arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
  MakeOutboundConnectCallIAMPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
            - support:SearchForCases
            - support:DescribeCases
            - support:DescribeIssueTypes
            - support:DescribeSeverityLevels
            - support:DescribeSupportLevel
            - support:DescribeCaseAttributes
            Effect: Allow
            Resource: "*"
          - Action: connect:StartOutboundVoiceContact
            Effect: Allow
            Resource: !Sub
              - arn:${AWS::Partition}:connect:${ConnectRegion}:${AWS::AccountId}:instance/${ConnectOutboundInstanceID}/contact/*
              - ConnectRegion: !Ref ConnectRegion   
        Version: "2012-10-17"
      PolicyName: MakeOutboundConnectCallIAMPolicy
      Roles: 
        - !Ref MakeOutboundConnectCallIAMRole
  MakeOutboundConnectCallInvokePermissionsForPublishEventSNSTopic:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !GetAtt MakeOutboundConnectCall.Arn
      Principal: sns.amazonaws.com
      SourceArn: !Ref PublishEventSNSTopic
  MakeOutboundConnectCallSubscriptionToPublishEventSNSTopic:
    Type: AWS::SNS::Subscription
    Properties:
      Protocol: lambda
      TopicArn: !Ref PublishEventSNSTopic
      Endpoint: !GetAtt MakeOutboundConnectCall.Arn
  MakeOutboundConnectCallLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${MakeOutboundConnectCall}
      RetentionInDays: 7      